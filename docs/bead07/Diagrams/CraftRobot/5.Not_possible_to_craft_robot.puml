@startuml
actor Tester as Tester <<SpaceShip>>
participant recipe as recipe <<RobotRecipe>>
participant s as s <<SpaceShip>>
participant inv as inv <<Inventory>>
participant a as a <<Asteroid>>
participant inventory as inventory <<Inventory>>
collections item as item <<Item>>
collections aItem as aItem <<Item>>

title SpaceShip can't craft robot

Tester-> recipe++: CanCraft(s)
recipe -> s++: GetAsteroid()

s --> recipe--: a
recipe -> s++: GetInventory()

s --> recipe--: inv

recipe -> inv++: getItems()
inv --> recipe--: items

recipe -> a++: GetInventory()
a --> recipe--: inventory

recipe -> inventory++: getItems()
inventory --> recipe--: aItems

note right
create 2 new item lists containing 
aItems and items 
end note

group loop: input check[for each i in recipe.input]

    group loop [for each item in items]
        recipe -> item++: Satisfies(i)
        item --> recipe--: true/false
        opt if satisfies
        recipe -> item++: Remove(i)
        item --> recipe--: true

        note right
        break loop after this function
        end note

        end
    end

    opt if not satisfied
            group loop [for each item in aItems]
            recipe -> aItem++: Satisfies(i)
            aItem --> recipe--: true/false
                opt if satisfies
                recipe -> aItem++: Remove(i)
                aItem --> recipe--: true

                note right
                break loop after this function
                end note

                end
            end
    end

    group opt interrupt [a recipe item is not satisfied]
        recipe --> Tester: false
    end

end
 


@enduml