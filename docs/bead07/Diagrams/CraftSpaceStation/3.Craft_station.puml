@startuml
actor Tester as Tester<<SpaceShip>>
participant recipe as recipe <<SpaceStationRecipe>>
participant s as s <<SpaceShip>>
participant inventory as inventory <<Inventory>>
collections item as item <<Item>>
participant asteroid as asteroid <<Asteroid>>
participant inv as inv <<Inventory>>
collections aItem as aItem <<Item>>
collections rItem as rItem <<Item>>
participant station as station <<SpaceStation>>
participant scene as scene <<Scene>>
participant mgr as mgr <<GameManager>>


title SpaceShip can craft space station
Tester-> recipe++: Craft(s)

recipe -> s++: GetAsteroid()
s --> recipe--: a

recipe -> s++: GetInventory()
s --> recipe--: inv

group loop: input check[for each rItem in recipe.input]

    recipe -> inventory++: RemoveItem(rItem)

    group loop: satisfies check [for each item in items] 
         inventory -> item++: Satisfies(rItem)
         item --> inventory--: true/false
         note right
         break loop when true
         end note
    end

    inventory-->recipe--: true/false


    group opt [not satisfied]
        recipe -> asteroid++: GetInventory()
        asteroid --> recipe--: inv

        recipe -> inv++: RemoveItem(rItem)

            group loop: satisfies check [for each item in aItems] 
                 inv -> aItem++: Satisfies(rItem)
                 aItem --> inv--: true/false
                    note right
                    break loop when true
                    end note
           end
        inv--> recipe--: true
    end
end
recipe -> recipe++: MakeResult(s)

create station
recipe --> station: <<create>> SpaceStation(asteroid)
station -> station++:  SpaceStation(asteroid)

note right
konstruktorhívás belseje
end note

station -> asteroid++: AddBuilding(station)
asteroid --> station--: 

station -> asteroid++: GetScene()
asteroid --> station--: scene

station -> scene++: GetManager()
scene --> station--: mgr

station -> mgr++: EndGame()
mgr --> station--: 

station-->recipe--:


recipe --> Tester: 


@enduml