@startuml
actor Tester as Tester<<SpaceShip>>
participant recipe as recipe <<RobotRecipe>>
participant s as s <<SpaceShip>>
participant inventory as inventory <<Inventory>>
collections item as item <<Item>>
participant asteroid as asteroid <<Asteroid>>
participant inv as inv <<Inventory>>
collections aItem as aItem <<Item>>
collections rItem as rItem <<Item>>
participant p as p <<Person>>
participant robot as robot <<Robot>>

title SpaceShip can craft robot

Tester-> recipe++: Craft(s)

recipe -> s++: GetAsteroid()
s --> recipe--: a

recipe -> s++: GetInventory()
s --> recipe--: inv

group loop: input check[for each rItem in recipe.input]

    recipe -> inventory++: RemoveItem(rItem)

    group loop: satisfies check [for each item in items] 
         inventory -> item++: Satisfies(rItem)
         item --> inventory--: x
        group opt [if x>0]
            inventory -> item++: Reduce(x)
            item --> inventory--:
        end
    end

    inventory-->recipe--: x

    recipe -> rItem++: Reduce(x)
    rItem --> recipe--: 

    group opt [not satisfied]
        recipe -> asteroid++: GetInventory()
        asteroid --> recipe--: inv

        recipe -> inv++: RemoveItem(rItem)

            group loop: satisfies check [for each item in aItems] 
                 inv -> aItem++: Satisfies(rItem)
                 aItem --> inv--: y
                group opt [if y>0]
                      inv -> aItem++: Reduce(y)
                      aItem --> inv--:
                 end
           end
        inv--> recipe--: y
    end
end
recipe -> recipe++: MakeResult(s)
recipe -> s++: GetOwner()

s--> recipe--: p
recipe --> robot--: <<create>> Robot(p,asteroid)

recipe --> Tester: 

caption A recept levonja a nyersanyagokat a megfelelő helyekről (telepes vagy aszteroida raktárából, kapacitástól függően), \n majd elkészíti a robotot és elhelyezi a megfelelő aszteroidán. 
@enduml